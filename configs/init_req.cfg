
req_init.reason_unaccepted_requests = "Method Not Allowed"
req_init.sip_code_unaccepted_requests = 405

route[REQINIT] {

    if(has_totag())
        return;

    xlog("L_NOTICE", "[REQINIT] Init Request received $ru from $si\n");

	if (is_method("CANCEL")) {
		dlg_manage();
        if (t_check_trans())
			route(RELAY);
        if ($sht(shareable_unconfirmed_call_ids=>$ci) != $null) { ## (no transaction in this Kamailio) lets check if the transaction was managed in another Kamailio on the cluster
            xlog("L_NOTICE", "[REQINIT] received a $rm for call: $ci, that was managed in a different Kamailio on the cluster, let's try relay it");
            route(RELAY);
        }
        xlog("L_NOTICE", "[REQINIT] received $ru, that does not belong to any transaction, let's silently exit.");
		exit;
	}

    if (is_method("REGISTER|PUBLISH")){
        xlog("L_NOTICE", "[REQINIT] Not supporting relaying of $rm request's\n");
        sl_send_reply("$ccp(req_init.sip_code_unaccepted_requests)", "$ccp(req_init.reason_unaccepted_requests)");
        exit;
    }

    remove_hf("Route");

    if (is_method("INVITE|SUBSCRIBE")){
        dlg_manage(); ## handle init dialog
        route(RECORD_ROUTE);
    }   else {
        xlog("L_WARN", "[REQ_INIT] Can only accept INVITE and subscribes out-of-dialog");
        exit;
    }

    return;
}

route[TRUSTED] {
    if($fU =~ "kamonitor")
        return;

    if(is_method("KDMQ"))
        return;

    if(!is_known_dlg() && !ds_is_from_list()) {
        file_out(FILE_OUT_NAME, "BAN - Not trusted info - to ban: $si");
        sl_send_reply("500", "Not trusted");
        exit;
    }

    if(is_known_dlg() && !ds_is_from_list()) {
        file_out(FILE_OUT_NAME, "BAN - received a request $rm with a valid dialog but from a unknown source - to ban: $si");
        sl_send_reply("500", "Not trusted");
        exit;
    }

}
