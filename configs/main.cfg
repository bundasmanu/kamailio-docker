#!KAMAILIO

#!trydefenvs STARTER_KAM_USER
#!ifndef STARTER_KAM_USER
    #!define STARTER_KAM_USER "kamailio"
#!endif

#!trydefenvs STARTER_KAM_GROUP
#!ifndef STARTER_KAM_GROUP
    #!define STARTER_KAM_GROUP "kamailio"
#!endif

#!trydefenvs DB_CONNECTION
#!ifndef DB_CONNECTION
    #!define DB_CONNECTION "postgres://postgres:postgres@172.25.0.2:5432/kamailio"
#!endif

#!trydefenv MAX_EXPIRES
#!ifndef MAX_EXPIRES
    #!define MAX_EXPIRES 3600
#!endif

#!trydefenv LISTEN_IP
#!ifndef LISTEN_IP
    #!define LISTEN_IP 127.0.0.1:5060
#!endif

#!trydefenvs HEPLIFY_IP
#!trydefenv HEP_CAPTURE_ID

#!trydefenvs WITH_RTPENGINE

#!trydefenvs WITH_DMQUEUE

#!trydefenvs FILE_OUT_CONTAINER_FOLDER
#!trydefenvs FILE_OUT_NAME
#!trydefenvs FILE_OUT_EXTENSION
#!trydefenv FILE_OUT_RETENTION_INTERVAL
#!defexps FILE_OUT_FILE_INFO "name=" + FILE_OUT_NAME + ";interval=" + FILE_OUT_RETENTION_INTERVAL + ";extension=" + FILE_OUT_EXTENSION

#!defexps LISTEN_IP_ADDRESS_DISPATCHER "udp:" + LISTEN_IP
#!defexps SIP_URI_LISTEN_IP_ADDRESS "sip:" + LISTEN_IP

#!defexps SQLOPS_DB_CONNECTION "ca=>" + DB_CONNECTION

loadmodule "ipops.so"
loadmodule "textops.so"
loadmodule "textopsx.so"
loadmodule "pv.so"
loadmodule "kex.so"
loadmodule "corex.so"
loadmodule "xlog.so"
loadmodule "ctl.so"
loadmodule "tm.so" ## dependency for sl
loadmodule "sl.so" ## dependency for xhttp
loadmodule "xhttp.so" ## dependency for jsonrpc
loadmodule "jsonrpcs.so"
loadmodule "db_postgres.so"
loadmodule "sqlops.so"
loadmodule "htable.so"
loadmodule "siptrace.so"
loadmodule "sdpops.so"
loadmodule "siputils.so"
loadmodule "file_out.so"

modparam("xlog", "prefix_mode", 1) ## different from prefix_mode global var
modparam("xlog", "prefix", "[$cfg(route)] [$cfg(line)] ") ## this is different from log_prefix global var
modparam("xlog", "log_facility", "LOG_LOCAL5")

modparam("ctl", "binrpc", "/var/run/kamailio/kamailio_ctl")
modparam("ctl", "user", STARTER_KAM_USER)
modparam("ctl", "group", STARTER_KAM_GROUP)

modparam("jsonrpcs", "pretty_format", 0)
modparam("jsonrpcs", "transport", 0) ## jsonrpc for HTTP usage and also tcp and via fifo (kamctl)
modparam("jsonrpcs", "fifo_name", "/var/run/kamailio/kamailio_rpc.fifo")
modparam("jsonrpcs", "fifo_user", STARTER_KAM_USER)
modparam("jsonrpcs", "fifo_group", STARTER_KAM_GROUP)
modparam("jsonrpcs", "dgram_socket", "/var/run/kamailio/kamailio_rpc.sock")
modparam("jsonrpcs", "dgram_user", STARTER_KAM_USER)
modparam("jsonrpcs", "dgram_group", STARTER_KAM_GROUP)

modparam("sqlops", "sqlcon", SQLOPS_DB_CONNECTION)
modparam("sqlops", "connect_mode", 0)

modparam("htable", "db_url", DB_CONNECTION)
modparam("htable", "htable", "params=>size=4;autoexpire=0;dbtable=ht_params;")
modparam("htable", "htable", "dids_carrier=>size=4;autoexpire=0;dbtable=ht_carrier_dids;")

modparam("siptrace", "trace_to_database", 0)
modparam("siptrace", "trace_flag", 22)
modparam("siptrace", "trace_on", 1)
modparam("siptrace", "duplicate_uri", HEPLIFY_IP)
modparam("siptrace", "hep_capture_id", HEP_CAPTURE_ID)
modparam("siptrace", "send_sock_addr", SIP_URI_LISTEN_IP_ADDRESS)
modparam("siptrace", "trace_mode", 1)
modparam("siptrace", "hep_mode_on", 1)
modparam("siptrace", "hep_version", 3)

modparam("file_out", "base_folder", FILE_OUT_CONTAINER_FOLDER)
modparam("file_out", "file", FILE_OUT_FILE_INFO)

#!ifdef WITH_DMQUEUE
    include_file "dmqueue.cfg"
#!endif

include_file "options.cfg"
include_file "dialog.cfg"
include_file "onLocal.cfg"
include_file "onSend.cfg"
include_file "sanity.cfg"
include_file "pike.cfg"
include_file "nat.cfg"
include_file "rr.cfg"
include_file "onFailure.cfg"
include_file "onReply.cfg"
include_file "relay.cfg"
include_file "dispatcher.cfg"
include_file "init_req.cfg"
include_file "mid_req.cfg"
include_file "internal.cfg"
include_file "external.cfg"
include_file "registrar.cfg"
include_file "http_prom.cfg"

#!ifdef WITH_RTPENGINE
    include_file "rtpengine.cfg"
#!endif

listen=LISTEN_IP name "internal_private_ip"

debug=3
log_prefix_mode=1
log_prefix="[$cfg(file)]"
log_stderror=no
auto_aliases=no
tcp_accept_no_cl=yes ## required for xhttp
fork=yes

user_agent_header="User-Agent: edge-proxy"
server_header="Edge-Proxy"
server_signature=no

request_route {
    xlog("L_NOTICE", "Hi\n");

    route(TRUSTED);

    route(PIKE);

    route(HEALTHCHECK);

    route(OPTIONS);

    route(HANDLE_KDMQ_REQUEST);

    route(REGISTRAR);

    route(HANDLE_NAT_REQUEST);

    route(MID_REQUEST);

    route(REQINIT);

    route(INTERNAL);

    route(EXTERNAL);

    exit;

}

onreply_route {
    xlog("L_NOTICE", "Received reply status code: $rs\n");

    if(!sanity_check("17604", "6")) {
		xlog("Malformed SIP response from $si:$sp\n");
		drop;
	}

}

event_route[htable:mod-init] {
    xlog("L_NOTICE", "HTABLE:mod-init: Starting Hash Tables");
}

event_route[xhttp:request] {

    #!ifdef PROM_STAT_CONNECTION
        route(SEND_RESPONSE_TO_PROMETHEUS);
    #!endif

    set_reply_close();
    set_reply_no_connect();

    exit;
}
