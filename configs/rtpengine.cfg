loadmodule "rtpengine.so"

#!trydefenvs RTPENGINE_FLAGS
#!trydefenvs RTPENGINE_SOCKET_ADDR
#!trydefenv RTPENGINE_DISABLE_TOUT_SEC
#!trydefenv RTPENGINE_TOUT_MSEC_RESPONSE
#!trydefenv RTPENGINE_MAX_RETRIES
#!trydefenv RTPENGINE_HTABLE_MAX_TIME_MS

modparam("rtpengine", "rtpengine_sock", RTPENGINE_SOCKET_ADDR)
modparam("rtpengine", "rtpengine_disable_tout", RTPENGINE_DISABLE_TOUT_SEC)
modparam("rtpengine", "rtpengine_tout_ms", RTPENGINE_TOUT_MSEC_RESPONSE)
modparam("rtpengine", "rtpengine_retr", RTPENGINE_MAX_RETRIES)
modparam("rtpengine", "hash_table_tout", RTPENGINE_HTABLE_MAX_TIME_MS)

modparam("rtpengine", "setid_avp", "$avp(rproxy_setid)")
modparam("rtpengine", "extra_id_pv", "$avp(rproxy_extra_id)")
modparam("rtpengine", "rtp_inst_pvar", "$avp(RTP_INSTANCE)")
modparam("rtpengine", "dtmf_event_callid", "$avp(dtmf_event_callid)")
modparam("rtpengine", "dtmf_event", "$avp(dtmf_event)")
modparam("rtpengine", "dtmf_event_timestamp", "$avp(dtmf_event_timestamp)")
modparam("rtpengine", "dtmf_event_source_tag", "$avp(dtmf_event_source_tag)")

route[RTPENGINE_MANAGE] {
    if(!rtpengine_manage(RTPENGINE_FLAGS)) ## no flags, they are handled in the template used in rtpengine.conf file, based on the used interface (only available for >= mr13.1)
        xlog("L_ERR", "[RTPENGINE_MANAGE] Failure to anchorage media with rtpengine");
    else
        xlog("L_DEBUG", "[RTPENGINE_MANAGE] Anchoring media to rtpengine");
}

event_route[rtpengine:dtmf-event] {
    xlog("L_INFO", "callid: $avp(dtmf_event_callid) , source_tag: $avp(dtmf_event_source_tag) , timestamp: $avp(dtmf_event_timestamp) , dtmf: $avp(dtmf_event) \n");
}
